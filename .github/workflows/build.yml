name: build and push cloud run containers

on:
  workflow_call:
    secrets:
      WIF_PROVIDER:
        required: true
      WIF_SERVICE_ACCOUNT:
        required: true
      GAR_LOCATION:
        required: true
      PROJECT_ID:
        required: true
      REPOSITORY_NAME:
        required: true
      RUN_SERVICE_NAME:
        required: true
      RUN_SERVICE_REGION:
        required: true
      

env:
  PROJECT_ID: ${{secrets.PROJECT_ID}}
  GAR_LOCATION: ${{secrets.GAR_LOCATION}}
  REPOSITORY: ${{secrets.REPOSITORY_NAME}}
  SERVICE: ${{secrets.RUN_SERVICE_NAME}}
  REGION: ${{secrets.RUN_SERVICE_REGION}}

jobs:
  push:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    
    outputs:
      build_tag: ${{ steps.push.outputs.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' 
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        id: push
        run: |-
          cd ./code/services/home_page
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          echo ${{github.sha}} >> "$GITHUB_OUTPUT"
    